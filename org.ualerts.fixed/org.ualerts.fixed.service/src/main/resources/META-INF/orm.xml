<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm
  http://java.sun.com/xml/ns/persistence/orm_1_0.xsd"
	version="1.0">

  <named-query name="findBuildingById">
    <query>
      select distinct b
      from Building b
      where b.id = :id
    </query>
  </named-query>

  <named-query name="findBuildingByName">
    <query>
      select distinct b
      from Building b
      where upper(b.name) = upper(:name)
    </query>
  </named-query>

  <named-query name="findAllBuildings">
    <query>
      select distinct b
      from Building b
      order by b.name
    </query>
  </named-query>

  <named-query name="findRoom">
    <query>
      select distinct r
      from Room r
      where r.building.id = :buildingId
      and r.roomNumber = :roomNumber
    </query>
  </named-query>

  <named-query name="findRoomsForBuilding">
    <query>
      select distinct r
      from Room r
      where r.building.id = :buildingId
      order by r.roomNumber
    </query>
  </named-query>

  <named-query name="findAllPositionHints">
    <query>
      select distinct p
      from PositionHint p
      order by p.hintText
    </query>
  </named-query>

  <named-query name="findPositionHint">
    <query>
      select distinct p
      from PositionHint p
      where p.hintText = :hintText
    </query>
  </named-query>

  <named-query name="findAssetBySerialNumber">
    <query>
      select distinct a
      from Asset a
      where a.serialNumber = :serialNumber
    </query>
  </named-query>

  <named-query name="findAssetByInventoryNumber">
    <query>
      select distinct a
      from Asset a
      where a.inventoryNumber = :inventoryNumber
    </query>
  </named-query>

  <named-query name="findAssetByMacAddress">
    <query>
      select distinct a
      from Asset a
      where a.macAddress = :macAddress
    </query>
  </named-query>

  <named-query name="findFixtureByLocation">
    <query>
      select distinct f
      from Fixture f
      where f.room.id = :roomId
      and f.positionHint.id = :hintId
    </query>
  </named-query>

  <named-query name="findAllFixtureDetails">
    <query>
      select distinct f
      from Fixture f
      left outer join fetch f.room r
      left outer join fetch f.positionHint p
      left outer join fetch r.building b
      left outer join fetch f.asset a
      order by b.name, r.roomNumber, p.hintText     
    </query>
  </named-query>

  <named-query name="findFixtureById">
    <query>
      select distinct f
      from Fixture f
      left outer join fetch f.room rm
      left outer join fetch rm.building
      left outer join fetch f.asset
      where f.id = :id
    </query>
  </named-query>

</entity-mappings>
